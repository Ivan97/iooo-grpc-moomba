import org.gradle.plugins.ide.eclipse.model.SourceFolder

apply plugin: 'com.google.protobuf'
apply plugin: 'com.google.osdetector'

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

def getLinuxReleaseSuffix() {
    if (osdetector.release.isLike('debian')) {
        return 'debian'
    } else if (osdetector.release.isLike('redhat')) {
        return 'redhat'
    } else {
        return ''
    }
}

eclipse {
    classpath {
        file.beforeMerged { cp ->
            def generatedGrpcFolder = new SourceFolder('src/generated/main/grpc', null)
            generatedGrpcFolder.entryAttributes['ignore_optional_problems'] = 'true'
            cp.entries.add(generatedGrpcFolder)
            def generatedJavaFolder = new SourceFolder('src/generated/main/java', null)
            generatedJavaFolder.entryAttributes['ignore_optional_problems'] = 'true'
            cp.entries.add(generatedJavaFolder)
        }
    }
}

idea {
    module {
        sourceDirs += file("src/generated/main/java")
        sourceDirs += file("src/generated/main/grpc")
        generatedSourceDirs += file("src/generated/main/java")
        generatedSourceDirs += file("src/generated/main/grpc")
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


dependencies {
    implementation "io.grpc:grpc-all:${grpcVersion}"
    implementation 'io.netty:netty-tcnative:2.0.20.Final:' + osdetector.classifier
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.2'
    }
    testImplementation "tech.iooo.boot:iooo-boot-test-bundle:${IOOO_BOOT_VERSION}"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}
